#!/bin/bash

if [ "$OS" == "Windows_NT" ]; then
    PLATFORM="win32"
    PATHSEP=";"
    LIB_EXT=".dll"
    QMAKE="qmake"
    MAKE="mingw32-make"
else
    PLATFORM="unix"
    PATHSEP=":"
    LIB_EXT=".so"
    QMAKE="qmake"
    MAKE="make"
fi

mkdir -p build

cd build || exit 1

if [ "$PLATFORM" == "win32" ]; then
    PATH="$PWD/build/Frontend/src${PATHSEP}$PATH"
    PATH="$PWD/build/Backend/src${PATHSEP}$PATH"
    PATH="$PWD/build/Common/AST/src${PATHSEP}$PATH"
    PATH="$PWD/build/Common/Logger/src${PATHSEP}$PATH"
    PATH="$PWD/build/Common/Figures/src${PATHSEP}$PATH"
    PATH="$PWD/build/Common/SemanticAnalyzer${PATHSEP}$PATH"
    export PATH
else
    LD_LIBRARY_PATH="$PWD/build/Frontend/src${PATHSEP}${LD_LIBRARY_PATH}"
    LD_LIBRARY_PATH="$PWD/build/Backend/src${PATHSEP}${LD_LIBRARY_PATH}"
    LD_LIBRARY_PATH="$PWD/build/Common/AST/src${PATHSEP}${LD_LIBRARY_PATH}"
    LD_LIBRARY_PATH="$PWD/build/Common/Logger/src${PATHSEP}${LD_LIBRARY_PATH}"
    LD_LIBRARY_PATH="$PWD/build/Common/Figures/src${PATHSEP}${LD_LIBRARY_PATH}"
    LD_LIBRARY_PATH="$PWD/build/Common/SemanticAnalyzer${PATHSEP}${LD_LIBRARY_PATH}"
    export LD_LIBRARY_PATH
fi

export PATH=/usr/bin:$PATH
"$QMAKE" ../Graph.pro

"$MAKE"
